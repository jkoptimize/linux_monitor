version: '3.8'

services:
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    networks:
      - monitoring_network
    volumes:
      - ./prometheus/config:/etc/prometheus
    depends_on:
      linux_monitor:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:9090/-/healthy"]
      interval: 30s
      timeout: 10s
      retries: 3

  grafana:
    image: grafana/grafana:10.0.0
    container_name: grafana
    ports:
      - "3000:3000"
    networks:
      - monitoring_network
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin123
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
    depends_on:
      prometheus:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  linux_monitor:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: linux_monitor
    privileged: true  # 关键：需要访问宿主机/proc
    ports:
      - "8080:8080"
    networks:
      - monitoring_network
    environment:
      - PROMETHEUS_SCRAPE_INTERVAL=15s  # 与Prometheus拉取间隔匹配
      - LD_LIBRARY_PATH=/app/linux_monitor/monitor/ebpf/.output
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/metrics"]
      interval: 10s
      timeout: 10s
      retries: 3
    volumes:
      - /sys/kernel/debug:/sys/kernel/debug:rw
      - /sys/fs/bpf:/sys/fs/bpf:rw
    ulimits:
      memlock:
        soft: -1  # 无限制
        hard: -1  # 无限制


volumes:
  grafana_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./data/grafana
    
networks:
  monitoring_network:
    driver: bridge